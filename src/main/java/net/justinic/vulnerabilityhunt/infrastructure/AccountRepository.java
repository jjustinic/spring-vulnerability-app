package net.justinic.vulnerabilityhunt.infrastructure;

import net.justinic.vulnerabilityhunt.domain.Account;
import net.justinic.vulnerabilityhunt.domain.AccountExistsException;
import net.justinic.vulnerabilityhunt.domain.DisabledAccount;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;

import java.util.HashMap;
import java.util.Map;

@Repository
public class AccountRepository {

    private final Logger logger = LoggerFactory.getLogger(getClass());

    private Map<String, Account> accounts = new HashMap<>();

    public Account addAccount(Account newAccount) {
        Account account = accounts.putIfAbsent(newAccount.getUsername(), newAccount);
        if (account != null) {
            throw new AccountExistsException(account);
        }
        logger.info("Added account: {}", newAccount);
        return account;
    }

    public Account findAccountByUsername(String username) {
        return accounts.getOrDefault(username, new DisabledAccount());
    }

    public Account removeAccount(String username) {
        Account removedAccount = accounts.remove(username);
        if (removedAccount != null) {
            logger.info("Removed account: {}", removedAccount);
        }
        return removedAccount;
    }

    public Account updateAccount(String username, Account newAccount) {
        if (!username.equals(newAccount.getUsername())) {
            removeAccount(username);
            return addAccount(newAccount);
        }
        return accounts.replace(username, newAccount);
    }

}
